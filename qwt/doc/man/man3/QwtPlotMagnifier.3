.TH "QwtPlotMagnifier" 3 "17 Sep 2006" "Version 5.0.0-rc0" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtPlotMagnifier \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
QwtPlotMagnifier provides zooming, by magnifying in steps. 

Together with \fBQwtPlotZoomer\fP and \fBQwtPlotPanner\fP it is possible to implement individual and powerful navigation of the plot canvas.
.PP
\fBSee also:\fP
.RS 4
\fBQwtPlotZoomer\fP, \fBQwtPlotPanner\fP, \fBQwtPlot\fP
.RE
.PP

.PP
Definition at line 30 of file qwt_plot_magnifier.h.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtPlotMagnifier\fP (\fBQwtPlotCanvas\fP *)"
.br
.ti -1c
.RI "virtual \fB~QwtPlotMagnifier\fP ()"
.br
.ti -1c
.RI "void \fBsetEnabled\fP (bool)"
.br
.ti -1c
.RI "bool \fBisEnabled\fP () const "
.br
.ti -1c
.RI "void \fBsetAxisEnabled\fP (int axis, bool on)"
.br
.ti -1c
.RI "bool \fBisAxisEnabled\fP (int axis) const "
.br
.ti -1c
.RI "void \fBsetMouseFactor\fP (double)"
.br
.ti -1c
.RI "double \fBmouseFactor\fP () const "
.br
.ti -1c
.RI "void \fBsetMouseButton\fP (int button, int buttonState=Qt::NoButton)"
.br
.ti -1c
.RI "void \fBgetMouseButton\fP (int &button, int &buttonState) const "
.br
.ti -1c
.RI "void \fBsetWheelFactor\fP (double)"
.br
.ti -1c
.RI "double \fBwheelFactor\fP () const "
.br
.ti -1c
.RI "void \fBsetWheelButtonState\fP (int buttonState)"
.br
.ti -1c
.RI "int \fBwheelButtonState\fP () const "
.br
.ti -1c
.RI "void \fBsetKeyFactor\fP (double)"
.br
.ti -1c
.RI "double \fBkeyFactor\fP () const "
.br
.ti -1c
.RI "void \fBsetZoomInKey\fP (int key, int buttonState)"
.br
.ti -1c
.RI "void \fBgetZoomInKey\fP (int &key, int &buttonState)"
.br
.ti -1c
.RI "void \fBsetZoomOutKey\fP (int key, int buttonState)"
.br
.ti -1c
.RI "void \fBgetZoomOutKey\fP (int &key, int &buttonState)"
.br
.ti -1c
.RI "\fBQwtPlotCanvas\fP * \fBcanvas\fP ()"
.br
.ti -1c
.RI "const \fBQwtPlotCanvas\fP * \fBcanvas\fP () const "
.br
.ti -1c
.RI "\fBQwtPlot\fP * \fBplot\fP ()"
.br
.ti -1c
.RI "const \fBQwtPlot\fP * \fBplot\fP () const "
.br
.ti -1c
.RI "virtual bool \fBeventFilter\fP (QObject *, QEvent *)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBrescale\fP (double factor)"
.br
.ti -1c
.RI "virtual void \fBwidgetMousePressEvent\fP (QMouseEvent *)"
.br
.ti -1c
.RI "virtual void \fBwidgetMouseReleaseEvent\fP (QMouseEvent *)"
.br
.ti -1c
.RI "virtual void \fBwidgetMouseMoveEvent\fP (QMouseEvent *)"
.br
.ti -1c
.RI "virtual void \fBwidgetWheelEvent\fP (QWheelEvent *)"
.br
.ti -1c
.RI "virtual void \fBwidgetKeyPressEvent\fP (QKeyEvent *)"
.br
.ti -1c
.RI "virtual void \fBwidgetKeyReleaseEvent\fP (QKeyEvent *)"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "const \fBQwtPlotCanvas\fP * QwtPlotMagnifier::canvas () const"
.PP
Return Observed plot canvas. 
.PP
Definition at line 203 of file qwt_plot_magnifier.cpp.
.SS "\fBQwtPlotCanvas\fP * QwtPlotMagnifier::canvas ()"
.PP
Return observed plot canvas. 
.PP
Definition at line 193 of file qwt_plot_magnifier.cpp.
.PP
Referenced by plot(), widgetMousePressEvent(), and widgetMouseReleaseEvent().
.SS "const \fBQwtPlot\fP * QwtPlotMagnifier::plot () const"
.PP
Return plot widget, containing the observed plot canvas. 
.PP
Definition at line 223 of file qwt_plot_magnifier.cpp.
.SS "\fBQwtPlot\fP * QwtPlotMagnifier::plot ()"
.PP
Return plot widget, containing the observed plot canvas. 
.PP
Definition at line 209 of file qwt_plot_magnifier.cpp.
.PP
References canvas().
.PP
Referenced by rescale().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.

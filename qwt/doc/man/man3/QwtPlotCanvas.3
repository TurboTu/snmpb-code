.TH "QwtPlotCanvas" 3 "17 Sep 2006" "Version 5.0.0-rc0" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtPlotCanvas \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
Canvas of a \fBQwtPlot\fP. 

\fBSee also:\fP
.RS 4
\fBQwtPlot\fP
.RE
.PP

.PP
Definition at line 28 of file qwt_plot_canvas.h.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBPaintAttribute\fP { \fBPaintCached\fP =  1, \fBPaintPacked\fP =  2 }"
.br
.ti -1c
.RI "enum \fBFocusIndicator\fP { \fBNoFocusIndicator\fP, \fBCanvasFocusIndicator\fP, \fBItemFocusIndicator\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBsetFocusIndicator\fP (\fBFocusIndicator\fP)"
.br
.ti -1c
.RI "\fBFocusIndicator\fP \fBfocusIndicator\fP () const "
.br
.ti -1c
.RI "void \fBsetPaintAttribute\fP (\fBPaintAttribute\fP, bool on=true)"
.br
.ti -1c
.RI "bool \fBtestPaintAttribute\fP (\fBPaintAttribute\fP) const "
.br
.ti -1c
.RI "QPixmap * \fBpaintCache\fP ()"
.br
.ti -1c
.RI "const QPixmap * \fBpaintCache\fP () const "
.br
.ti -1c
.RI "void \fBinvalidatePaintCache\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtPlotCanvas\fP (\fBQwtPlot\fP *)"
.br
.ti -1c
.RI "virtual \fB~QwtPlotCanvas\fP ()"
.br
.ti -1c
.RI "virtual void \fBhideEvent\fP (QHideEvent *)"
.br
.ti -1c
.RI "virtual void \fBpaintEvent\fP (QPaintEvent *)"
.br
.ti -1c
.RI "virtual void \fBdrawContents\fP (QPainter *)"
.br
.ti -1c
.RI "virtual void \fBdrawFocusIndicator\fP (QPainter *)"
.br
.ti -1c
.RI "void \fBdrawCanvas\fP (QPainter *painter=NULL)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBQwtPlot\fP"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQwtPlotCanvas::FocusIndicator\fP"
.PP
Focus indicator. 
.PP
.IP "\(bu" 2
NoFocusIndicator
.br
 Don´t paint a focus indicator
.PP
.PP
.IP "\(bu" 2
CanvasFocusIndicator
.br
 The focus is related to the complete canvas. Paint the focus indicator using paintFocus()
.PP
.PP
.IP "\(bu" 2
ItemFocusIndicator
.br
 The focus is related to an item (curve, point, ...) on the canvas. It is up to the application to display a focus indication using f.e. highlighting.
.PP
.PP
\fBSee also:\fP
.RS 4
\fBsetFocusIndicator()\fP, \fBfocusIndicator()\fP, paintFocus()
.RE
.PP

.PP
Definition at line 80 of file qwt_plot_canvas.h.
.SS "enum \fBQwtPlotCanvas::PaintAttribute\fP"
.PP
Paint attributes. 
.PP
.IP "\(bu" 2
PaintCached
.br
 Paint double buffered and reuse the content of the pixmap buffer for some spontaneous repaints that happen when a plot gets unhidden, deiconified or changes the focus. Disabling the cache will improve the performance for incremental paints (using \fBQwtPlotCurve::draw\fP).
.PP
.PP
.IP "\(bu" 2
PaintPacked
.br
 Suppress system background repaints and paint it together with the canvas contents. Painting packed might avoid flickering for expensive repaints, when there is a notable gap between painting the background and the plot contents.
.PP
.PP
The default setting enables PaintCached and PaintPacked
.PP
\fBSee also:\fP
.RS 4
\fBsetPaintAttribute()\fP, \fBtestPaintAttribute()\fP, \fBpaintCache()\fP
.RE
.PP

.PP
Definition at line 56 of file qwt_plot_canvas.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtPlotCanvas::QwtPlotCanvas (\fBQwtPlot\fP *)\fC [explicit, protected]\fP"
.PP
Sets a cross cursor, enables QwtPlotCanvas::PaintCached. 
.PP
Definition at line 50 of file qwt_plot_canvas.cpp.
.PP
References setPaintAttribute().
.SS "QwtPlotCanvas::~QwtPlotCanvas ()\fC [protected, virtual]\fP"
.PP
Destructor. 
.PP
Definition at line 72 of file qwt_plot_canvas.cpp.
.SH "Member Function Documentation"
.PP 
.SS "void QwtPlotCanvas::drawCanvas (QPainter * painter = \fCNULL\fP)\fC [protected]\fP"
.PP
Draw the the canvas
.PP
Paints all plot items to the contentsRect(), using \fBQwtPlot::drawCanvas\fP and updates the paint cache.
.PP
\fBSee also:\fP
.RS 4
\fBQwtPlot::drawCanvas\fP, setPaintAttributes(), testPaintAttributes()
.RE
.PP

.PP
Definition at line 256 of file qwt_plot_canvas.cpp.
.PP
Referenced by drawContents().
.SS "void QwtPlotCanvas::drawContents (QPainter *)\fC [protected, virtual]\fP"
.PP
Redraw the canvas, and focus rect. 
.PP
Definition at line 233 of file qwt_plot_canvas.cpp.
.PP
References drawCanvas(), drawFocusIndicator(), and focusIndicator().
.PP
Referenced by paintEvent().
.SS "void QwtPlotCanvas::drawFocusIndicator (QPainter *)\fC [protected, virtual]\fP"
.PP
Draw the focus indication. 
.PP
Definition at line 327 of file qwt_plot_canvas.cpp.
.PP
References QwtPainter::drawFocusRect().
.PP
Referenced by drawContents().
.SS "\fBQwtPlotCanvas::FocusIndicator\fP QwtPlotCanvas::focusIndicator () const"
.PP
\fBReturns:\fP
.RS 4
Focus indicator
.RE
.PP
\fBSee also:\fP
.RS 4
\fBFocusIndicator\fP, \fBsetFocusIndicator\fP
.RE
.PP

.PP
Definition at line 182 of file qwt_plot_canvas.cpp.
.PP
Referenced by drawContents().
.SS "void QwtPlotCanvas::invalidatePaintCache ()"
.PP
Invalidate the internal paint cache. 
.PP
Definition at line 161 of file qwt_plot_canvas.cpp.
.PP
Referenced by QwtPlot::replot().
.SS "const QPixmap * QwtPlotCanvas::paintCache () const"
.PP
Return the paint cache, might be null. 
.PP
Definition at line 155 of file qwt_plot_canvas.cpp.
.SS "QPixmap * QwtPlotCanvas::paintCache ()"
.PP
Return the paint cache, might be null. 
.PP
Definition at line 149 of file qwt_plot_canvas.cpp.
.PP
Referenced by QwtPlotCurve::draw().
.SS "void QwtPlotCanvas::setFocusIndicator (\fBFocusIndicator\fP focusIndicator)"
.PP
Set the focus indicator
.PP
\fBSee also:\fP
.RS 4
\fBFocusIndicator\fP, \fBfocusIndicator\fP
.RE
.PP

.PP
Definition at line 172 of file qwt_plot_canvas.cpp.
.SS "void QwtPlotCanvas::setPaintAttribute (\fBPaintAttribute\fP attribute, bool on = \fCtrue\fP)"
.PP
Changing the paint attributes. 
.PP
\fBParameters:\fP
.RS 4
\fIattribute\fP Paint attribute 
.br
\fIon\fP On/Off
.RE
.PP
The default setting enables PaintCached and PaintPacked
.PP
\fBSee also:\fP
.RS 4
\fBtestPaintAttribute()\fP, \fBdrawCanvas()\fP, \fBdrawContents()\fP, \fBpaintCache()\fP
.RE
.PP

.PP
Definition at line 87 of file qwt_plot_canvas.cpp.
.PP
Referenced by QwtPlotCanvas().
.SS "bool QwtPlotCanvas::testPaintAttribute (\fBPaintAttribute\fP attribute) const"
.PP
Test wether a paint attribute is enabled
.PP
\fBParameters:\fP
.RS 4
\fIattribute\fP Paint attribute 
.RE
.PP
\fBReturns:\fP
.RS 4
true if the attribute is enabled
.RE
.PP

.PP
Definition at line 143 of file qwt_plot_canvas.cpp.
.PP
Referenced by QwtPlotCurve::draw(), and QwtPlot::replot().

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.

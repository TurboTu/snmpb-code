.TH "QwtCPointerData" 3 "17 Sep 2006" "Version 5.0.0-rc0" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtCPointerData \- 
.SH SYNOPSIS
.br
.PP
Inherits \fBQwtData\fP.
.PP
.SH "Detailed Description"
.PP 
Data class containing two pointers to memory blocks of doubles. 
.PP
Definition at line 148 of file qwt_data.h.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtCPointerData\fP (const double *x, const double *y, size_t size)"
.br
.ti -1c
.RI "\fBQwtCPointerData\fP & \fBoperator=\fP (const \fBQwtCPointerData\fP &)"
.br
.ti -1c
.RI "virtual \fBQwtData\fP * \fBcopy\fP () const "
.br
.ti -1c
.RI "virtual size_t \fBsize\fP () const "
.br
.ti -1c
.RI "virtual double \fBx\fP (size_t i) const "
.br
.ti -1c
.RI "virtual double \fBy\fP (size_t i) const "
.br
.ti -1c
.RI "const double * \fBxData\fP () const "
.br
.ti -1c
.RI "const double * \fByData\fP () const "
.br
.ti -1c
.RI "virtual QwtDoubleRect \fBboundingRect\fP () const "
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QwtCPointerData::QwtCPointerData (const double * x, const double * y, size_t size)"
.PP
Constructor
.PP
\fBWarning:\fP
.RS 4
The programmer must assure that the memory blocks referenced by the pointers remain valid during the lifetime of the QwtPlotCPointer object. 
.RE
.PP
\fBSee also:\fP
.RS 4
QwtCurve::setRawData and QwtPlot::setCurveRawData.
.RE
.PP

.PP
Definition at line 220 of file qwt_data.cpp.
.PP
Referenced by copy().
.SH "Member Function Documentation"
.PP 
.SS "QwtDoubleRect QwtCPointerData::boundingRect () const\fC [virtual]\fP"
.PP
Returns the bounding rectangle of the data. If there is no bounding rect, like for empty data the rectangle is invalid: QwtDoubleRect::isValid() == false
.PP
Reimplemented from \fBQwtData\fP.
.PP
Definition at line 273 of file qwt_data.cpp.
.PP
References size().
.SS "\fBQwtData\fP * QwtCPointerData::copy () const\fC [virtual]\fP"
.PP
Return a pointer to a copy (virtual copy constructor)
.PP
Implements \fBQwtData\fP.
.PP
Definition at line 263 of file qwt_data.cpp.
.PP
References QwtCPointerData().
.SS "\fBQwtCPointerData\fP & QwtCPointerData::operator= (const \fBQwtCPointerData\fP &)"
.PP
Assignment. 
.PP
Definition at line 227 of file qwt_data.cpp.
.PP
References d_size, d_x, and d_y.
.SS "size_t QwtCPointerData::size () const\fC [virtual]\fP"
.PP
Return the size of the data set
.PP
Implements \fBQwtData\fP.
.PP
Definition at line 238 of file qwt_data.cpp.
.PP
Referenced by boundingRect().
.SS "double QwtCPointerData::x (size_t i) const\fC [virtual]\fP"
.PP
Return the x value of data point i 
.PP
\fBParameters:\fP
.RS 4
\fIi\fP Index 
.RE
.PP
\fBReturns:\fP
.RS 4
x X value of data point i
.RE
.PP

.PP
Implements \fBQwtData\fP.
.PP
Definition at line 243 of file qwt_data.cpp.
.SS "double QwtCPointerData::y (size_t i) const\fC [virtual]\fP"
.PP
Return the y value of data point i 
.PP
\fBParameters:\fP
.RS 4
\fIi\fP Index 
.RE
.PP
\fBReturns:\fP
.RS 4
y Y value of data point i
.RE
.PP

.PP
Implements \fBQwtData\fP.
.PP
Definition at line 248 of file qwt_data.cpp.

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code.
